/*************************************************************************
 *  Compilation:  javac PolygonTransform.java
 *  Execution:    java PolygonTransform
 *
 *  @author: Sarthak Uppal
 *
 *************************************************************************/

public class PolygonTransform {


    // Returns a new array that is an exact copy of the given array. 
    // The given array is not mutated. 
    public static double[] copy(double[] array) {

    // WRITE YOUR CODE HERE
    double[] arrayCopy = new double[array.length];
        for (int i = 0; i < array.length; i++) {
            arrayCopy[i] = array[i];
        }
        return arrayCopy;
    }
    
    // Scales the given polygon by the factor alpha. 
    public static void scale(double[] x, double[] y, double alpha) {

    // WRITE YOUR CODE HERE
        for(int h = 0; h < x.length; h++)
        {
        x[h] *= alpha;
        y[h] *= alpha;
    
        }
    }
    
    // Translates the given polygon by (dx, dy). 
    public static void translate(double[] x, double[] y, double dx, double dy) {

    // WRITE YOUR CODE HERE
    for ( int i = 0; i < x.length; i++) 
    {
        x[i] = x[i] + dx;
        y[i] = y[i] + dy;
    }
    }
    
    // Rotates the given polygon theta degrees counterclockwise, about the origin. 
    public static void rotate(double[] x, double[] y, double theta) {

    // WRITE YOUR CODE HERE
     double t;
     double radians = Math.toRadians(theta);
     for( int i = 0; i < x.length; i++)
     {
        t = x[i];
        x[i] = x[i] * Math.cos(radians) - y[i] * Math.sin(radians);
        y[i] = y[i] * Math.cos(radians) + t * Math.sin(radians);
     }
    }

    // Tests each of the API methods by directly calling them. 
    public static void main(String[] args) {

    // WRITE YOUR CODE HERE
    StdDraw.setScale(-5.0, +5.0); 
    double[] x = { 0, 1, 1, 0 }; 
    double[] y = { 0, 0, 2, 1 }; 
    double alpha = 2.0; 
    StdDraw.setPenColor(StdDraw.RED); 
    StdDraw.polygon(x, y); 
    scale(x, y, alpha); 
    StdDraw.setPenColor(StdDraw.BLUE);
    StdDraw.polygon(x, y);

    StdDraw.setScale(-5.0, +5.0); 
    double dx = 2.0, dy = 1.0; 
    StdDraw.setPenColor(StdDraw.RED); 
    StdDraw.polygon(x, y); 
    translate(x, y, dx, dy); 
    StdDraw.setPenColor(StdDraw.BLUE);
    StdDraw.polygon(x, y);

    StdDraw.setScale(-5.0, +5.0); 
    double theta = 45.0; 
    StdDraw.setPenColor(StdDraw.RED); 
    StdDraw.polygon(x, y); 
    rotate(x, y, theta); 
    StdDraw.setPenColor(StdDraw.BLUE);
    StdDraw.polygon(x, y);
    }
}
